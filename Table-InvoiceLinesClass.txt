self.Znum			= Znum		# this is the Z number where this receipt/invoice belongs to (pending to be issued)
self.DocNum			= DocNum		# the serial number of this receipt/invoice for this Z (starts at 1 every new Z)
self.DocNumAccum		= DocNumAccum		# accumulating serial number of this rece/inv since installation - KEY to fetch all the LINES of this receipt/inv from InvoiceLines
self.LineNum			= LineNum		# this is the line number of each transaction belonging to DocNumAccum receipt or invoice
self.InvType			= InvType		# KENYA TIMS 0=PROTOTYPE, 1=COPY, … 9=TEMPORARY PARTIAL RECEIPT FOR SERVING TO A TABLE
self.TransType			= TransType		# the type of transaction FOR THIS LINE: is it a SALE, a REFUND, a VOID, a total CANCEL (which will go back to nul all prev)?
self.Command			= Command		# the T, R, V etc command coming in from the keyboard
self.CommandID			= CommandID		# this is the nn from Tnn, the ccccccc from PLUcccccccccc etc coming in from the keyboard
self.QTY1			= QTY1		# quantity qqqqqX coming in from the keyboard
self.QTY2			= QTY2		# second quantity if operator uses N x M x price
self.QTY			= QTY		# this is either QTY=QTY1 if QTY2 null OR QTY=QTY1*QTY2
self.PluDescr			= PluDescr		# this is the description retrieved from static.plu - PluCode is CommandID above / if REFUND or VOID, the descr, price is NEGATIVE
self.PluDescrB			= PluDescrB		# auxiliary description for this plu
self.HSCode			= HSCode		# KENYA TIMS - the HSCode for the plu
self.HSDescr			= HSDescr		# KENYA TIMS - the HSDescription for the plu
self.PluQR			= PluQR		# QR code for this PLU: perhaps usefull if the PLU is a CODE by itself, for example selling BITCOINS and giving the private key here
self.UnitPrice			= UnitPrice		# Unit Price of the PLU as retrieved from static.plu OR given by the keyboard command
self.PluDpt			= PluDpt		# The dpt this PLU belongs to as retrieved from static.plu - the VATRate retrieved from DPT is stored in VATRate 
self.DptDescr			= DptDescr		# dpt description taken from dpt table
self.DptPrice			= DptPrice		# if there is a fixed dpt price in db, use this, else take input price - this will be determined in CheckIn.py module
self.Category			= Category		# if dpt is associated with a category, this is shown here as category CODE (description may be read from static.cat table)
self.DiscntPerc			= DiscntPerc		# the percentage of discount - the CommandID will determine if dscnt will be on previous line item or subtotal
self.DiscntPercAmnt		= DiscntPercAmnt		# if we have multiple discounts on subtotal then we need to keep track of all vat rates accum subtots on every line 
self.DiscntAmnt			= DiscntAmnt		# UNLESS we do it THROUGH InvoiceId which should be re-calculated if we get SUBTOTAL command….
self.MrkupPerc			= MrkupPerc		# 
self.MrkupPercAmnt		= MrkupPercAmnt		# 
self.MrkupAmnt			= MrkupAmnt		# 
self.VoidLineNum		= VoidLineNum		# in case this line's command is VOID, we should prompt user to enter the voided line - prev void will auto fill here LineNum-1 (the previous line)
self.VATRate			= VATRate		# The applicable VAT rate for this transaction, taken either from the dpt associated with PLU OR, if we decouple PLUs from DPTs, from PLU
self.TaxableAmnt		= TaxableAmnt		# provision to handle things like PETROL STATIONS KENYA where there is a NON-taxable amnt included in PLU price
self.VATTaxAmnt			= VATTaxAmnt		# the calculated amount of VAT
self.OtherTaxAmnt		= OtherTaxAmnt		# any other non-VAT tax applied to this transaction
self.TaxExemptAmnt		= TaxExemptAmnt		# the tax exempt amount
self.TotalAmnt			= TotalAmnt		# total amount payable
self.SubTotalFromStart		= SubTotalFromStart		# this attribute will hold the ACCUMULATED TOTAL from all previous lines in same receipt until it is closed
self.PayCode			= PayCode		# one payment per line, this is the payment code / RESTAURANT support: in SPLIT function
self.PayDescr			= PayDescr		# description of payment
self.PayAmnt			= PayAmnt		# amount of payment
self.CouponCode			= CouponCode		# we could use QR printed coupons with some encoding, code goes here
self.CouponDescr		= CouponDescr		# description of the coupon, perhaps embedded in QR code
self.CouponAmnt			= CouponAmnt		# the amount of coupon - if coupon is a DISCOUNT, it will be analyzed by CheckIn.py and put into discount records
self.GiftCardCode		= GiftCardCode		# GIFTCARDS will also be QR based with encrypted detailes, issued by our system
self.GiftCardDescr		= GiftCardDescr		# description of giftcard, embedded in QR code
self.GiftAmnt			= GiftAmnt		# amount embedded and encrypted in gift card
self.Change			= Change		# change which is the difference between the PayAmnt - TotalAmnt
self.SpecialCommandPrint		= SpecialCommandPrint		# For example, if this line is a REFUND, the SpecialComandPrint is *** REFUND *** etc…
self.LineComment		= LineComment		# comment to be printed under this transaction line
self.LinePlainTextPrintout		= LinePlainTextPrintout		# to help with the _a.txt, the exact text that is printed out when this line is executed
