self.Znum			= ListFetchOne[0]		# this is the Z number where this receipt/invoice belongs to (pending to be issued)
self.DocNum			= ListFetchOne[1]		# the serial number of this receipt/invoice for this Z (starts at 1 every new Z)
self.DocNumAccum		= ListFetchOne[2]		# accumulating serial number of this rece/inv since installation - KEY to fetch all the LINES of this receipt/inv from InvoiceLines
self.LineNum			= ListFetchOne[3]		# this is the line number of each transaction belonging to DocNumAccum receipt or invoice
self.TransType			= ListFetchOne[4]		# the type of transaction FOR THIS LINE: is it a SALE, a REFUND, a VOID, a total CANCEL (which will go back to nul all prev)?
self.Command			= ListFetchOne[5]		# the T, R, V etc command coming in from the keyboard
self.CommandID			= ListFetchOne[6]		# this is the nn from Tnn, the ccccccc from PLUcccccccccc etc coming in from the keyboard
self.QTY1			= ListFetchOne[7]		# quantity qqqqqX coming in from the keyboard
self.QTY2			= ListFetchOne[8]		# second quantity if operator uses N x M x price
self.QTY			= ListFetchOne[9]		# this is either QTY=QTY1 if QTY2 null OR QTY=QTY1*QTY2
self.PluDescr			= ListFetchOne[10]		# this is the description retrieved from static.plu - PluCode is CommandID above / if REFUND or VOID, the descr, price is NEGATIVE
self.PluDescrB			= ListFetchOne[11]		# auxiliary description for this plu
self.HSCode			= ListFetchOne[12]		# KENYA TIMS - the HSCode for the plu
self.HSDescr			= ListFetchOne[13]		# KENYA TIMS - the HSDescription for the plu
self.PluQR			= ListFetchOne[14]		# QR code for this PLU: perhaps usefull if the PLU is a CODE by itself, for example selling BITCOINS and giving the private key here
self.UnitPrice			= ListFetchOne[15]		# Unit Price of the PLU as retrieved from static.plu OR given by the keyboard command
self.PluDpt			= ListFetchOne[16]		# The dpt this PLU belongs to as retrieved from static.plu - the VATRate retrieved from DPT is stored in LineVATRate 
self.DptDescr			= ListFetchOne[17]		# dpt description taken from dpt table
self.DptPrice			= ListFetchOne[18]		# if there is a fixed dpt price in db, use this, else take input price - this will be determined in CheckIn.py module
self.Category			= ListFetchOne[19]		# if dpt is associated with a category, this is shown here as category CODE (description may be read from static.cat table)
self.DiscntPerc			= ListFetchOne[20]		# if discount is applied in this transaction line, this is the percentage of discount - the CommandID will determine if dscnt will be on previous line item or subtotal
self.DiscntPercAmnt		= ListFetchOne[21]		# if we have multiple discounts on subtotal then we need to keep track of all vat rates accum subtots on every line 
self.DiscntAmnt			= ListFetchOne[22]		# UNLESS we do it THROUGH InvoiceId which should be re-calculated if we get SUBTOTAL command….
self.MrkupPerc			= ListFetchOne[23]		# 
self.MrkupPercAmnt		= ListFetchOne[24]		# 
self.MrkupAmnt			= ListFetchOne[25]		# 
self.VoidLineNum		= ListFetchOne[26]		# in case this line's command is VOID, we should prompt user to enter the voided line - prev void will auto fill here LineNum-1 (the previous line)
self.VATRate			= ListFetchOne[27]		# The applicable VAT rate for this transaction, taken either from the dpt associated with PLU OR, if we decouple PLUs from DPTs, from PLU
self.TaxableAmnt		= ListFetchOne[28]		# provision to handle things like PETROL STATIONS KENYA where there is a NON-taxable amnt included in PLU price
self.VATTaxAmnt			= ListFetchOne[29]		# the calculated amount of VAT
self.OtherTaxAmnt		= ListFetchOne[30]		# any other non-VAT tax applied to this transaction
self.TaxExemptAmnt		= ListFetchOne[31]		# the tax exempt amount
self.TotalAmnt			= ListFetchOne[32]		# total amount payable
self.SubTotalFromStart		= ListFetchOne[33]		# this attribute will hold the ACCUMULATED TOTAL from all previous lines in same receipt until it is closed
self.SpecialCommandPrint		= ListFetchOne[34]		# For example, if this line is a REFUND, the SpecialComandPrint is *** REFUND *** etc…
self.LineComment		= ListFetchOne[35]		# comment to be printed under this transaction line
self.LinePlainTextPrintout		= ListFetchOne[36]		# to help with the _a.txt, the exact text that is printed out when this line is executed
